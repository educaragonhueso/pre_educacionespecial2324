AaaANTES DE EMPEZAR EN PRO

   explicación número aleatorio


CUESTIONES Y NUEVOS REQUISITOS CURSO 22/23
---------------------------------------------

elabora log detallado en fase2
revisar gestion de vacantes
fase 3 innecesaria ya q se hace lo mismo q en la fase 2
bloquear barra de estado de solicitudes al finalizar el plazo de solicitudes


GIT COMANDOS

Crear un repo desde cero, en github

   EN GITHUB:           Crear repo en github
   EN LINEA COMANDOS:   
         git remote add origin git@github.com:educaragonhueso/pro_educacionespecial2223.git
         git branch -M main
         git push -u origin main

sincronizar con el remoto

         git clone git@github.com:educaragonhueso/pro_educacionespecial2223.git
         git remote add origin git@github.com:educaragonhueso/pro_educacionespecial2223.git
         git pull



TOKEN edes
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

GIT COMANDOS OLD
_____________________

Para sincornizar ficheros

Creamos un repo remote llamado pre_origin si es para sincronizar con PRE:
   git remote add pre_origin git@github.com:educaragonhueso/pre_educacionespecial2122.git

   git add pre_origin ...
Sincronizmoas con el remoto, llamado pre_origin
   git fetch pre_origin

Aplicamos cmabios al fichero

 git checkout pre_origin/main -- rutafichero




Para ficheros grandes

git filter-branch --index-filter 'git rm -r --cached --ignore-unmatch <file/dir>' HEAD

Web para explicar como filtrar segun q archivos

https://docs.github.com/en/github/authenticating-to-github/removing-sensitive-data-from-a-repository

Para actualizar cambios en destino

   git pull

equivale a fetch+merge

Para quitar un fichero del track, o dejar de ser trackeado

    git rm --cached -- config/config_global.php

MMODIFICACION
  echo config/config_database.php >> .gitignore ; git rm --cached config/config_database.php rm config/config_database.php ; git commit -m "Start ignoring config database" 

Descarttar ficheros o directorios en pull

git reset -- any_deleted_files
git reset any_deleted_directories
git checkout -- .
git commit -am "resolved merge"
